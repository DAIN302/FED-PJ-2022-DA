@charset "utf-8";

/* Robot PJ 메인 CSS - robot.css */

/* 웹폰트 */
@import url('https://hangeul.pstatic.net/hangeul_static/css/NanumBanJjagBanJjagByeor.css');
/* font-family: 'NanumBanJjagBanJjagByeor'; */
@import url('https://fonts.googleapis.com/css2?family=Barlow&family=Black+Ops+One&family=Chakra+Petch&family=Orbitron:wght@500&display=swap');
/* 
    font-family: 'Barlow', sans-serif;
    font-family: 'Black Ops One', cursive;
    font-family: 'Chakra Petch', sans-serif;
    font-family: 'Orbitron', sans-serif;
*/

/* 애니메이션 css */
@import url(./robot_ani.css);

/* 초기화 */
html, body,h1, h2, p, ol, ul {
    margin: 0;
    padding: 0;
}


/************* 공통클래스 *************/
html {
    /* 부드러운 스크롤 */
    scroll-behavior: smooth;
    /* #아이디명 스크롤 이동 시 부드럽게 애니메이션 이동함 */
}

/* 메탈소재1 배경1 */
.mt1 {
    background: url(../images/metal01.jpg) no-repeat center/cover;
}

.mt2 {
    background: url(../images/metal02.jpg) no-repeat center/cover;
}

body {
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
    font-family: 'NanumBanJjagBanJjagByeor';
    /* 전체가로스크롤방지 */
    overflow-x: hidden;
    /* 밑에 sticky 포지션을 쓴 상태로 overflow 를 쓴다면 잘못하면
       sticky 포지션이 깨질 수 있음, 
       따라서 부모나 조상 박스를 잘 설정하고 overflow를 줘야함 
       -> 왠만해선 html 전체에다 주지 말자 */
}

/* 공사중 표시 */
body * {
    /* outline: 2px dashed yellow; */
}
/********************************* 1. 상단영역 *********************************/
.top {
    color: #eee;
}
/* 1-1. 로고 */
.logo {
    /* 포지션 */
    position: fixed;
    z-index: 999;
    /* 위치세팅 */
    top: calc(50% - 102px);
    left: calc(50% - 102px);
    /* 
       [ 앱솔루트 / 픽스드 정중앙 보내기 ] 
        1. calc()로 계산 
           -> top: calc(50% - 중앙갈박스 높이값절반); 
              left: calc(50% - 중앙갈박스 가로값절반); 
              (주의 : -, + 기호 앞뒤 반드시 띄어쓰기)
        2. trnasform : trnaslate 로 이동
           위치값 50% 이동 후 trnasform 사용
           -> top : 50%;
              left : 50%;
              tranrsform : trnaslate(-50%, -50%)
    */ 
    /* 크기 확대 */
    transform: scale(2.5);

    /* 박스세팅 */
    width: 200px;
    height: 200px;
    border-radius: 50%;
    border: 2px solid hotpink;
    text-align: center;
    /* 박스배경 */
    background: pink url(../images/beemo.png) no-repeat center/cover;
    /* 박스그림자 */
    box-shadow: inset 0 0 20px hotpink, 0 0 20px 10px hotpink;
    /* 글자세팅 */
    color: aquamarine;
    font-size: 80px;
    line-height: 250px;
    text-shadow: 2px 0 #000, -2px 0 #000, 0 2px #000, 0 -2px #000;
}
/* 1-2. 링크 타이틀 */
.link {
    position: absolute;
    z-index: 10;
    top: 60px;
    right: 50px;
}

/* 링크 a */
.link a {
    /* a 요소 밑줄세팅인 컬러와 밑줄세팅 제거 */
    color: lawngreen;
    text-decoration: none;
    font-size: 60px;
    text-shadow: 2px 2px 2px #000;
}

/* 마우스 오버시 */
.link a:hover {
    /* 글자색 */
    color: orangered;
    /* 글자데코 */
    text-decoration: underline;
    /* 글자데코스타일 */
    text-decoration-style: wavy;
}
/* 1-3. 탑이동버튼 */
.btnTop {
    position: fixed;
    z-index: 999;
    bottom: 50px;
    right: 30px;
    /* 박스세팅 */
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 5px outset #fff;
    background-color: #ccc;
}   

.btnTop a {
    display: block;
    width: 100%;
    height: 100%;
    color: blue;
    text-decoration: none;
    font: 30px/90px 'Black Ops One';
    /* line-height 가 높이값인 100px 이므로 중앙 정렬 위해 100px 아닌 이유
       버튼은 기본적으로 box-sizing : border-box 이므로
       패딩과 보더가 내부에 포함
       따라서 컨테느 영역이 그만큼 작아짐 박스보더가 5px 라 양쪽합 10px
       이것을 빼서 90px
    */
}

/* 버튼 마우스 오버시 */
.btnTop:hover {
    background-color: yellow;
    border-style: inset;
}
.btnTop:hover a {
    color : red;
}


/********************************* 2. 메인영역 *********************************/
/* 2-1. 로봇박스 */
.robx {
    /* 패딩 위아래 */
    padding: 200px 0 300px;
}


/* 로봇머리 */
.head {
    position: relative;
    /* 부모자격 static 하면서도 부모자격이 있어야 하기 때문에 position : relavtive
        static 한 성격 -> 마영오 먹히게 하기 위해 */
    z-index: 1;    
    width: 250px;
    height: 250px;
    margin: 0 auto;
    border-radius: 10% 10% 45% 45%;
}
/* 로봇머리 직계 하위 div 모두 앱솔루트 */
.head > div {
    position: absolute;
}
/* 턱깎기 */
/* .head::after {
    content: '';
    display: block;
    position: absolute;
    top: 70%;
    z-index: -1;
    width: 250px;
    height: 100px;
    background: url(../images/metal01.jpg) no-repeat bottom/cover;
    clip-path: polygon(0 0, 30% 100%, 70% 100%, 100% 0);
} */



/* 모자 */
.head::before {
    content: '';
    display: block;
    position: absolute;
    top:-178px;
    left: -40px;
    width: 420px;
    height: 300px;
    background: url(../images/hat2.png) no-repeat center/100%;
}

.head:hover::before {
    content: '';
    display: block;
    position: absolute;
    top:-178px;
    left: -133px;
    width: 420px;
    height: 300px;
    background: url(../images/hat2.png) no-repeat center/100%;
    transform: scaleX(-1);
}

/* 천사링 */
.head::after {
    content: '';
    display: block;
    position: absolute;
    top:-250px;
    left: -19px;
    width: 300px;
    height: 200px;
    background: url(../images/halo.png) no-repeat center/100%;
}

/* 눈공통 */
.eye {
    width: 60px;
    height: 60px;
    top: 50px;
    /* 배경공통 */
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100%;
    /* 둥근모서리 */
    border-radius: 50%;
    /* 보더 이중선 : double */
    border: 4px double #000; 

}
/* 왼눈 */
.ey1 {
    background-image: url(../images/eye_l.PNG);
    left: 35px;
}
/* 오른눈 */
.ey2 {
    background-image: url(../images/eye_r.PNG);
    right: 35px;
}
/* 코 */
.nose {
    width: 50px;
    height: 70px;
    top: 105px;
    left: 100px;
    border-radius: 50%;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
}

/* 볼 */
.nose::before {
    left : -90px;
}
.nose::after {
    right : -90px;
}

.nose::before, .nose::after {
    content :'';
    display: block;
    position: absolute;
    width: 50px;
    height: 30px;
    top : 35px;
    border-radius: 50%;
    background-color: rgba(240, 128, 128, 0.45);
}


/* 입 */
.mouth {
    width: 100px;
    height: 50px;
    bottom: 20px;
    left: 75px;
    background: url(../images/mouth3.png) no-repeat 0/100% 100%;
}

/* 입 옆에 별모양점 가상요소로 만들기 */
.mouth::before, .mouth::after {
    content: '';
    display: block;
    position: absolute;
    /* 부모 -> .mouth */
    top: 5px;
    right: -25px;
    width: 20px;
    height: 20px;
    background-color: pink;
    /* 클리핑으로 삼각형 만들기 */
    clip-path: polygon(0 100%, 50% 0, 100% 100%);
}

.mouth::after {
    transform : rotate(180deg) translateY(-30%)
}

/* 
   [ CSS 클리핑 속성 ]
     clip-path : polycon(x1 y1, x2 y2)
     -> 클리핑 범위를 지정하는 것, 클리핑 범위 안의 부분은 보여지고 바깥은 숨겨짐
     -> 각 좌표쌍은 띄어쓰기로 각 점은 콤마로 구분
     -> 각 점은 연결하여 도형 모양 출력 
     -> px 은 각 도형 크기 내부의 수치로 쓰고 %는 도형을 기준한 위치를 %로 나타냄
*/


/* 귀공통 */
.ear {
    width: 35px;
    height: 80px;
    top: 80px;
}
/* 왼귀 */
.er1 {
    left:-35px;
    border-radius: 50% 0 0 50%;
}
/* 오른귀 */
.er2 {
    right: -35px;
    border-radius: 0 50% 50% 0;
}

/* 귀걸이 */
.er1::after, .er2::after {
    content :'';
    display: block;
    position: absolute;
    width: 24px;
    height: 24px;
    clip-path: path("M12 4.419c-2.826-5.695-11.999-4.064-11.999 3.27 0 7.27 9.903 10.938 11.999 15.311 2.096-4.373 12-8.041 12-15.311 0-7.327-9.17-8.972-12-3.27z");
    top : 75px;
    background-image: linear-gradient(130deg, rgb(255, 63, 63), red, darkred, rgb(68, 0, 0));
    /* background-color: red; */
    transform: scale(1.5);
}

.er1::after {
    left : 8px;
}

.er2::after {
    right : 8px;
}


/************** 로봇 몸통 **************/
.body {
    position: relative;
    /* 부모자격 : 하위직계 div들 */
    width: 180px;
    height: 400px;
    margin: 40px auto 0;
}

/* 몸통 하위 직계 div 앱솔루트 포지션 */
.body > div {
    position: absolute;
    box-shadow: 0 0 10px 5px lightpink;
}
/* 가상요소로 몸통 상단 만들기 */
.body::before {
    content: '';
    display: block;
    position: absolute;
    width: 250px;
    height: 200px;
    left: -35px;
    /* 그라데이션 */
    background-image: linear-gradient(180deg,skyblue, lightpink);
    clip-path: polygon(0 0, 10% 100%, 90% 100%, 100% 0);
}
/* 가상요소로 몸통 하단 만들기 */
.body::after {
    content: '';
    display: block;
    position: absolute;
    width: 250px;
    height: 200px;
    bottom: 20px;
    left: -35px;
    /* 그라데이션 */
    background-image: linear-gradient(180deg,lightyellow, lightpink);
    clip-path: polygon(0 0, 10% 100%, 90% 100%, 100% 0);
    transform : rotate(180deg) translateY(-30%)

}
/* 목 */
.neck {
    width: 70px;
    height: 60px;
    top : -45px;
    left: 55px;
    border-radius: 0 0 15px 15px;
    border-bottom: 10px ridge pink;
}
/* 팔공통 */
.arm {
    top: 7px;
    width: 60px;
    height: 200px;
    z-index: -1;
    border-radius: 25px;
    transform-origin: center 10%;
}

/* 팔공통 가상요소로 연결부분 만들기 */
.arm::before, .arm::after { 
    content: '';
    display: block;
    position: absolute;
    width: 70px;
    height: 70px;
    border-radius: 50%;
    background-color: #eee;
    bottom: -30px;
    left:-5px;
    z-index: 1;
    border: 1px solid #888;
    /* 보더, 패딩 포함 크기 유지 */
    box-sizing: border-box;
}

/* 연결부분 내부박스 */
.arm::after {
    transform: scale(.7);
    /* 선형 그라데이션 */
    background-image: linear-gradient(340deg, skyblue, lightskyblue,rgb(214, 239, 255), white);
}



/* 팔하단 */
.arm span {
    position: absolute;
    /* 부모는 .arm */
    top: 100%;
    left: 5px;
    display: block;
    width: 50px;
    height: 180px;
    border-radius: 25px;
    /* 회전축 변경 : 세로방향 top */
    transform-origin: top;
    box-shadow: 0 0 10px 5px lightpink;
}

/* 팔하단 가상요소로 손박스 만들기 */
.arm span::after {
    content: '';
    display: block;
    position: absolute;
    width: 80px;
    height: 120px;
    left: -10px;
    /* outline: 2px dashed lime; */
    bottom: -120px;
    transform-origin: top;
}

/* 왼손 배경이미지 */
.a1 span::after {
    background: url(../images/hand_left.png) no-repeat bottom/100%;
    transform: rotate(10deg);
}
/* 오른손 배경이미지 */
.a2 span::after {
    background: url(../images/hand_right.png) no-repeat bottom/100%;
    left: -23px;
    transform: rotate(10deg);
}



/* 왼팔 */
.a1 {
    left: -60px;
    transform: rotate(16deg);
}
/* 왼팔하단 */
.a1 span {
    transform: rotate(-20deg);
    /* 그냥 바꾸면 팔 상단이랑 떨어져서 회전하므로 회전축 바꿔줘야함 */
}
/* 오른팔 */
.a2 { 
    right: -60px;
    transform: rotate(-16deg);
}
/* 오른팔하단 */
.a2 span {
    transform: rotate(20deg);
}

/* 다리공통 */
.leg {
    top: 90%;
    /* 부모박스 높이만큼 아래로 밀어냄 */
    width : 75px;
    height: 180px;
    border-radius: 30px;
}
/* 다리공통 가상요소로 연결부분 만들기 */
.leg::before, .leg::after {
    content: '';
    display: block;
    position: absolute;
    width: 70px;
    height: 70px;
    bottom: -40px;
    left: 3px;
    z-index: 1;
    border-radius: 10px;
    box-sizing: border-box;
    border: 1px solid #888;
    background-color: #eee;
    /* 트랜스폼 : 먼저 x축 축소하고 회전 -> 무엇을 먼저했느냐에 따라 결과가 달라짐 */
    transform: rotate(45deg) scale(.8);
}

/* 다리연결부분 내부박스 */
.leg::after {
    transform: scale(.6) rotate(45deg);
    /* 선형 그라데이션 */
    background-image: linear-gradient(270deg, rgb(255, 255, 143) 30%, lightyellow, white);
}

/* 다리하단 */
.leg span {
    position: absolute;
    /* 부모는 .leg */
    top: 100%;
    left: 5px;
    display: block;
    width: 65px;
    height: 250px;
    border-radius: 25px;
    box-shadow: 0 0 10px 5px lightpink;
}

/* 다리하단 가상요소로 발 만들기 */
.leg span::after {
    content: '';
    display: block;
    position: absolute;
    width: 85px;
    height: 60px;
    bottom: -25px;
    left: -10px;
    border-radius: 35px 35px 0 0;
    border-bottom: 8px solid limegreen;
    background-image: linear-gradient(340deg, lime 20%, rgb(215, 250, 215) 60%, #fff);
}

/* 다리하단 가상요소로 부츠 만들기 */
.leg span::before {
    content: '';
    display: block;
    position: absolute;
    width: 65px;
    height: 180px;
    bottom: -10px;
    border-top: 5px solid limegreen;
    background-image: linear-gradient(-90deg, lime 20%, rgb(132, 255, 132) 60%, #fff);
}

/* 왼다리 */
.l1{
    left: 8px;
}
/* 오른다리 */
.l2 {
    right: 8px;
}
/* 어깨공통 */
.shd {
    width : 90px;
    height: 90px;
}
/* 왼어깨 */
.s1 {
    left : -80px;
    top : -15px;
    border-radius: 50%;
    transform: rotate(354deg);
}
/* 오른어깨 */
.s2 {
    right: -80px;
    top: -15px;
    border-radius: 50%;
    transform: rotate(-354deg);
}
/* tv */
.tv {
width: 180px;
    height: 125px;
    top: 65px;
    left: 0px;
    border-radius: 5px;
    background: url(../images/tv.jpg) no-repeat center/cover;
}

/* 스크린 */
.screen {
    position: absolute;
    top: 8px;
    left: 9px;
    width: 128px;
    height: 98px;
    border-radius: 10px;
    background-color: #000;
    /* 자식요소 iframe 넘치는 부분 숨기기 */
    overflow: hidden;
}

/* 동영상 iframe */
.screen iframe {
    position: absolute;
    top: 1px;
    left: 1px;
    width: 128px;
    height: 98px;
    /* 아이프레임 기본보더 없앰 */
    border: none;
}

/* 2-2. 로봇설명박스 */
.dcbx {
    /* 최대가로크기 maw */
    max-width: 800px;
    /* 중앙정렬 */
    margin: 0 auto 100px;
    /* 반투명배경색 */
    background-color: rgba(0, 0, 0, 0.5);
    /* 글자색 */
    color: white;
    /* 글자그림자 */
    text-shadow: 1px 1px 1px #000;
    /* 패딩 */
    padding: 15px 30px;
    /* 경계선 */
    border: 3px solid lavender;
    /* 둥근모서리 */
    border-radius: 20px;
    /* 박스그림자를 이용한 글로우 효과 */
    box-shadow: 
    inset 0 0 20px lavender,
    inset 0 0 50px 10px lightpink;
    /* inset은 내부그림자 옵션
       x y spread blur color */
}
/* 2-2-1. 제목 */
.dcbx h2 {
    /* 스티키 포지션 */
    position: sticky;
    top: 10px;
    /* 위치값을 줘야 그 자리에 스티키!! 해서 fixed 처럼 된다 단! 부모박스 한정 */
    /* 박스세팅 */
    text-align: center;
    background-image: linear-gradient(180deg, rgba(101, 210, 253, 0.514) 20%, rgba(255,255,255,0.5) 80%);
    border-radius: 20px;
    /* 글자세팅 */
    font-size: 50px;
    color: rgb(255, 112, 195);
    text-shadow: 0px 0px 10px #ff0080;
    
}
/* 2-2-2. 츌처 */
.dcbx small {
    /* 글자세팅 */
    font-size: 16px;
    line-height: 3;
    color: yellow;
    /* 박스세팅 
       small 태그는 인라인 요소이기 때문에 블록요소로 바꿔주고 text-align : center
       써서 중앙정렬 해줌*/
    display: block;
    text-align: center;
}
/* 2-2-3. 내용단락 */
.dcbx p {
    /* 글자세팅 */
    font-size: 22px;
    line-height: 1.5;
    letter-spacing: 1px;
    word-spacing: 1px;
    /* 
       [ 다단설정 ] 
         - 다중열 속성
         -> column-count : 다중열 개수
         -> column-rule : 다중열 구분선
         -> column-gqp : 다중열 사이간격 
    */
    /* 다중열 개수 */
    column-count: 3;
    /* 다중열 구분선 
       column-rule: 두께 종료 색상; */
    column-rule: 3px dotted oldlace;
    /* 다중열 사이간격 */
    column-gap: 40px;
    /* 양쪽정렬 */
    text-align: justify;
    /* 단어깨기 - 영어는 단어끼리 붙어서 정렬하기 때문에 양쪽정렬 시 공백이 많이 생김
       이를 깨주기 위해 사용 */
    word-break: break-all;
    /* 1byte문자(ex. 영단어)일 경우 기본적으로 단어 단위로 줄바꿈을 하는 세팅
       이 때 양쪽정렬시 중간에 큰 공백이 생김
       그래서 단어를 글자단위로 모두 깨주는 설정 -> word-break: break-all; 
       2byte문자(ex. 한글, 일본어)는 자동으로 깨져있음 */
    /* 들여쓰기 */
    text-indent: 20px;
}

/* 설명문단 첫번째 글자만 가상요소로 글자 디자인 변경 */
.dcbx p::first-letter {
    /* 글자세팅 */
    font-size: 30px;
    font-weight: bold;
    color: orange;
}

/********************************* 3. 하단영역 *********************************/
#info {
    /* 글자세팅 */
    color: #fff;
    font-size: 50px;
    text-shadow: 2px 2px 2px #000;
    font-weight: bold;
    /* 박스세팅 */
    background-color: rgba(0,0,0,0.5);
    text-align: center;
    padding: 50px;
}
/* 속박스 가상요소로 아이콘 모양 넣기*/
.info::before{
    content: '';
    display: inline-block;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    border: 2px solid hotpink;
    background: pink url(../images/icons8-beemo-color-32.png) no-repeat center/cover;
}

.info span {
    color : aquamarine;
}
